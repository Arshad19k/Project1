{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/Textbox.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","react_default","a","createElement","alert","className","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","type","msg","Navbar","Fragment","concat","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","Textbox","prop","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","length","defaultProps","App","setmode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.3f0330f3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n  const capitalize = (word)=> {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        {props.alert && <div className={`alert alert-success alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">About us</a>\r\n              </li>\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode=== 'light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set Title Here'\r\n};","import React, {useState} from 'react'\r\n\r\nexport default function Textbox(prop) {\r\n\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        prop.showAlert(\"Converted to uppercase!\",\"success\");\r\n    }\r\n    const handlelowClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        prop.showAlert(\"Converted to lowercase!\",\"success\");\r\n    }\r\n    const handleclearClick = ()=>{\r\n        let newText = '';\r\n        setText(newText);\r\n        prop.showAlert(\"Clear TextArea!\",\"success\");\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handlecopy = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    const [text,setText] = useState(\"Enter text here\");\r\n  return (\r\n    <>\r\n        <div className=\"container my-4\" style={{color:prop.mode=== 'light'?'black':'white'}}>\r\n            <h1>{prop.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:prop.mode=== 'light'?'white':'grey',color:prop.mode==='light'?'dark':'white'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Get text uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handlelowClick}>Get text lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleclearClick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handlecopy}>Copy Text</button>\r\n        </div>\r\n        <div className=\"container my-4\" style={{color:prop.mode=== 'light'?'black':'white'}}>\r\n            <h1>Your text summery</h1>\r\n            <p>{text.split(\" \").length} words and {text.length} characters. </p>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n","import React,{ useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textbox from './components/Textbox';\n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setmode] = useState('light'); // wheather dar mode is enable or not.\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type) => {\n      setAlert({\n        msg: message,\n        type:type\n      });\n      setTimeout(() => {\n        setAlert(null);\n      }, 1500);\n  }\n\n    const toggleMode = () => {\n      if(mode === 'light') {\n        setmode('dark');\n        document.body.style.backgroundColor = '#0d4481';\n        showAlert(\"Dark mode has been enabled\",\"success\");\n        document.title = \"TextUtils - Drak Mode\";\n        // setInterval(() => {\n        //   document.title = \"TextUtils is Amazing site\";\n        // },2000 );\n        // setInterval(() => {\n        //   document.title = \"Install TextUtils\";\n        // },1500 );\n      } else {\n        setmode('light');\n        document.body.style.backgroundColor = 'white';\n        showAlert(\"Light mode has been enabled\",\"success\");\n        document.title = \"TextUtils - Light Mode\";\n      }\n    }\n  return (\n    <>\n    {/* <Router> */}\n        <Navbar title=\"Project1\" mode={mode} toggleMode={toggleMode} />\n        {/* <Navbar/> */}\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes> */}\n              {/* /users --> component 1 (react always use partial matching use..)\n              /users/home --> --> component 2  (exact used to match exact same matching...) */}\n              {/* <Route exact path=\"/about\" element={<About/>}/> */}\n              {/* <Route exact path=\"/\" element={<Textbox heading=\"Enter text here\" showAlert={showAlert} mode={mode} />}/> */}\n              <Textbox heading=\"Enter text here\" showAlert={showAlert} mode={mode} />\n          {/* </Routes> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}